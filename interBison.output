Terminals unused in grammar

   GT_EQ
   LT
   EQ_EQ
   POW
   AND
   OR
   NOT
   DQ
   EF


Grammar

    0 $accept: code $end

    1 code: stmtList

    2 stmtList: stmt
    3         | stmt NEWLINE stmtList
    4         | error NEWLINE stmtList

    5 stmt: %empty
    6     | TERM EQUAL TERM PLUS TERM
    7     | TERM EQUAL TERM MINUS TERM
    8     | TERM EQUAL TERM MULTI TERM
    9     | TERM EQUAL TERM DIV TERM
   10     | TERM EQUAL TERM
   11     | IF TERM OPR TERM GOTO LABEL
   12     | GOTO LABEL
   13     | LABEL COLON
   14     | FUNC_BEGIN TERM
   15     | BEGIN_FUNC TERM
   16     | RETURN TERM
   17     | FUNC_END
   18     | CNVRTFLOAT TERM COMMA TERM
   19     | CNVRTINT TERM COMMA TERM
   20     | PARAM TERM
   21     | REFPARAM TERM
   22     | CALL TERM COMMA TERM
   23     | END

   24 TERM: STR
   25     | INT_LIT
   26     | FLOAT_LIT
   27     | STR DOT STR DOT
   28     | MINUS INT_LIT

   29 OPR: LT_EQ
   30    | EQUAL
   31    | GT
   32    | NOT_EQ


Terminals, with rules where they appear

$end (0) 0
error (256) 4
LABEL (258) 11 12 13
STR (259) 24 27
INT_LIT (260) 25 28
FLOAT_LIT (261) 26
LT_EQ (262) 29
EQUAL (263) 6 7 8 9 10 30
MINUS (264) 7 28
MULTI (265) 8
GOTO (266) 11 12
COLON (267) 13
PLUS (268) 6
BEGIN_FUNC (269) 15
FUNC_BEGIN (270) 14
IF (271) 11
NEWLINE (272) 3 4
GT_EQ (273)
LT (274)
GT (275) 31
EQ_EQ (276)
NOT_EQ (277) 32
POW (278)
AND (279)
OR (280)
NOT (281)
COMMA (282) 18 19 22
DOT (283) 27
CALL (284) 22
PARAM (285) 20
REFPARAM (286) 21
END (287) 23
DQ (288)
EF (289)
DIV (290) 9
FUNC_END (291) 17
RETURN (292) 16
CNVRTFLOAT (293) 18
CNVRTINT (294) 19


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
code (41)
    on left: 1, on right: 0
stmtList (42)
    on left: 2 3 4, on right: 1 3 4
stmt (43)
    on left: 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23, on right:
    2 3
TERM (44)
    on left: 24 25 26 27 28, on right: 6 7 8 9 10 11 14 15 16 18 19
    20 21 22
OPR (45)
    on left: 29 30 31 32, on right: 11


State 0

    0 $accept: . code $end

    error       shift, and go to state 1
    LABEL       shift, and go to state 2
    STR         shift, and go to state 3
    INT_LIT     shift, and go to state 4
    FLOAT_LIT   shift, and go to state 5
    MINUS       shift, and go to state 6
    GOTO        shift, and go to state 7
    BEGIN_FUNC  shift, and go to state 8
    FUNC_BEGIN  shift, and go to state 9
    IF          shift, and go to state 10
    CALL        shift, and go to state 11
    PARAM       shift, and go to state 12
    REFPARAM    shift, and go to state 13
    END         shift, and go to state 14
    FUNC_END    shift, and go to state 15
    RETURN      shift, and go to state 16
    CNVRTFLOAT  shift, and go to state 17
    CNVRTINT    shift, and go to state 18

    $end     reduce using rule 5 (stmt)
    NEWLINE  reduce using rule 5 (stmt)

    code      go to state 19
    stmtList  go to state 20
    stmt      go to state 21
    TERM      go to state 22


State 1

    4 stmtList: error . NEWLINE stmtList

    NEWLINE  shift, and go to state 23


State 2

   13 stmt: LABEL . COLON

    COLON  shift, and go to state 24


State 3

   24 TERM: STR .
   27     | STR . DOT STR DOT

    DOT  shift, and go to state 25

    $default  reduce using rule 24 (TERM)


State 4

   25 TERM: INT_LIT .

    $default  reduce using rule 25 (TERM)


State 5

   26 TERM: FLOAT_LIT .

    $default  reduce using rule 26 (TERM)


State 6

   28 TERM: MINUS . INT_LIT

    INT_LIT  shift, and go to state 26


State 7

   12 stmt: GOTO . LABEL

    LABEL  shift, and go to state 27


State 8

   15 stmt: BEGIN_FUNC . TERM

    STR        shift, and go to state 3
    INT_LIT    shift, and go to state 4
    FLOAT_LIT  shift, and go to state 5
    MINUS      shift, and go to state 6

    TERM  go to state 28


State 9

   14 stmt: FUNC_BEGIN . TERM

    STR        shift, and go to state 3
    INT_LIT    shift, and go to state 4
    FLOAT_LIT  shift, and go to state 5
    MINUS      shift, and go to state 6

    TERM  go to state 29


State 10

   11 stmt: IF . TERM OPR TERM GOTO LABEL

    STR        shift, and go to state 3
    INT_LIT    shift, and go to state 4
    FLOAT_LIT  shift, and go to state 5
    MINUS      shift, and go to state 6

    TERM  go to state 30


State 11

   22 stmt: CALL . TERM COMMA TERM

    STR        shift, and go to state 3
    INT_LIT    shift, and go to state 4
    FLOAT_LIT  shift, and go to state 5
    MINUS      shift, and go to state 6

    TERM  go to state 31


State 12

   20 stmt: PARAM . TERM

    STR        shift, and go to state 3
    INT_LIT    shift, and go to state 4
    FLOAT_LIT  shift, and go to state 5
    MINUS      shift, and go to state 6

    TERM  go to state 32


State 13

   21 stmt: REFPARAM . TERM

    STR        shift, and go to state 3
    INT_LIT    shift, and go to state 4
    FLOAT_LIT  shift, and go to state 5
    MINUS      shift, and go to state 6

    TERM  go to state 33


State 14

   23 stmt: END .

    $default  reduce using rule 23 (stmt)


State 15

   17 stmt: FUNC_END .

    $default  reduce using rule 17 (stmt)


State 16

   16 stmt: RETURN . TERM

    STR        shift, and go to state 3
    INT_LIT    shift, and go to state 4
    FLOAT_LIT  shift, and go to state 5
    MINUS      shift, and go to state 6

    TERM  go to state 34


State 17

   18 stmt: CNVRTFLOAT . TERM COMMA TERM

    STR        shift, and go to state 3
    INT_LIT    shift, and go to state 4
    FLOAT_LIT  shift, and go to state 5
    MINUS      shift, and go to state 6

    TERM  go to state 35


State 18

   19 stmt: CNVRTINT . TERM COMMA TERM

    STR        shift, and go to state 3
    INT_LIT    shift, and go to state 4
    FLOAT_LIT  shift, and go to state 5
    MINUS      shift, and go to state 6

    TERM  go to state 36


State 19

    0 $accept: code . $end

    $end  shift, and go to state 37


State 20

    1 code: stmtList .

    $default  reduce using rule 1 (code)


State 21

    2 stmtList: stmt .
    3         | stmt . NEWLINE stmtList

    NEWLINE  shift, and go to state 38

    $default  reduce using rule 2 (stmtList)


State 22

    6 stmt: TERM . EQUAL TERM PLUS TERM
    7     | TERM . EQUAL TERM MINUS TERM
    8     | TERM . EQUAL TERM MULTI TERM
    9     | TERM . EQUAL TERM DIV TERM
   10     | TERM . EQUAL TERM

    EQUAL  shift, and go to state 39


State 23

    4 stmtList: error NEWLINE . stmtList

    error       shift, and go to state 1
    LABEL       shift, and go to state 2
    STR         shift, and go to state 3
    INT_LIT     shift, and go to state 4
    FLOAT_LIT   shift, and go to state 5
    MINUS       shift, and go to state 6
    GOTO        shift, and go to state 7
    BEGIN_FUNC  shift, and go to state 8
    FUNC_BEGIN  shift, and go to state 9
    IF          shift, and go to state 10
    CALL        shift, and go to state 11
    PARAM       shift, and go to state 12
    REFPARAM    shift, and go to state 13
    END         shift, and go to state 14
    FUNC_END    shift, and go to state 15
    RETURN      shift, and go to state 16
    CNVRTFLOAT  shift, and go to state 17
    CNVRTINT    shift, and go to state 18

    $end     reduce using rule 5 (stmt)
    NEWLINE  reduce using rule 5 (stmt)

    stmtList  go to state 40
    stmt      go to state 21
    TERM      go to state 22


State 24

   13 stmt: LABEL COLON .

    $default  reduce using rule 13 (stmt)


State 25

   27 TERM: STR DOT . STR DOT

    STR  shift, and go to state 41


State 26

   28 TERM: MINUS INT_LIT .

    $default  reduce using rule 28 (TERM)


State 27

   12 stmt: GOTO LABEL .

    $default  reduce using rule 12 (stmt)


State 28

   15 stmt: BEGIN_FUNC TERM .

    $default  reduce using rule 15 (stmt)


State 29

   14 stmt: FUNC_BEGIN TERM .

    $default  reduce using rule 14 (stmt)


State 30

   11 stmt: IF TERM . OPR TERM GOTO LABEL

    LT_EQ   shift, and go to state 42
    EQUAL   shift, and go to state 43
    GT      shift, and go to state 44
    NOT_EQ  shift, and go to state 45

    OPR  go to state 46


State 31

   22 stmt: CALL TERM . COMMA TERM

    COMMA  shift, and go to state 47


State 32

   20 stmt: PARAM TERM .

    $default  reduce using rule 20 (stmt)


State 33

   21 stmt: REFPARAM TERM .

    $default  reduce using rule 21 (stmt)


State 34

   16 stmt: RETURN TERM .

    $default  reduce using rule 16 (stmt)


State 35

   18 stmt: CNVRTFLOAT TERM . COMMA TERM

    COMMA  shift, and go to state 48


State 36

   19 stmt: CNVRTINT TERM . COMMA TERM

    COMMA  shift, and go to state 49


State 37

    0 $accept: code $end .

    $default  accept


State 38

    3 stmtList: stmt NEWLINE . stmtList

    error       shift, and go to state 1
    LABEL       shift, and go to state 2
    STR         shift, and go to state 3
    INT_LIT     shift, and go to state 4
    FLOAT_LIT   shift, and go to state 5
    MINUS       shift, and go to state 6
    GOTO        shift, and go to state 7
    BEGIN_FUNC  shift, and go to state 8
    FUNC_BEGIN  shift, and go to state 9
    IF          shift, and go to state 10
    CALL        shift, and go to state 11
    PARAM       shift, and go to state 12
    REFPARAM    shift, and go to state 13
    END         shift, and go to state 14
    FUNC_END    shift, and go to state 15
    RETURN      shift, and go to state 16
    CNVRTFLOAT  shift, and go to state 17
    CNVRTINT    shift, and go to state 18

    $end     reduce using rule 5 (stmt)
    NEWLINE  reduce using rule 5 (stmt)

    stmtList  go to state 50
    stmt      go to state 21
    TERM      go to state 22


State 39

    6 stmt: TERM EQUAL . TERM PLUS TERM
    7     | TERM EQUAL . TERM MINUS TERM
    8     | TERM EQUAL . TERM MULTI TERM
    9     | TERM EQUAL . TERM DIV TERM
   10     | TERM EQUAL . TERM

    STR        shift, and go to state 3
    INT_LIT    shift, and go to state 4
    FLOAT_LIT  shift, and go to state 5
    MINUS      shift, and go to state 6

    TERM  go to state 51


State 40

    4 stmtList: error NEWLINE stmtList .

    $default  reduce using rule 4 (stmtList)


State 41

   27 TERM: STR DOT STR . DOT

    DOT  shift, and go to state 52


State 42

   29 OPR: LT_EQ .

    $default  reduce using rule 29 (OPR)


State 43

   30 OPR: EQUAL .

    $default  reduce using rule 30 (OPR)


State 44

   31 OPR: GT .

    $default  reduce using rule 31 (OPR)


State 45

   32 OPR: NOT_EQ .

    $default  reduce using rule 32 (OPR)


State 46

   11 stmt: IF TERM OPR . TERM GOTO LABEL

    STR        shift, and go to state 3
    INT_LIT    shift, and go to state 4
    FLOAT_LIT  shift, and go to state 5
    MINUS      shift, and go to state 6

    TERM  go to state 53


State 47

   22 stmt: CALL TERM COMMA . TERM

    STR        shift, and go to state 3
    INT_LIT    shift, and go to state 4
    FLOAT_LIT  shift, and go to state 5
    MINUS      shift, and go to state 6

    TERM  go to state 54


State 48

   18 stmt: CNVRTFLOAT TERM COMMA . TERM

    STR        shift, and go to state 3
    INT_LIT    shift, and go to state 4
    FLOAT_LIT  shift, and go to state 5
    MINUS      shift, and go to state 6

    TERM  go to state 55


State 49

   19 stmt: CNVRTINT TERM COMMA . TERM

    STR        shift, and go to state 3
    INT_LIT    shift, and go to state 4
    FLOAT_LIT  shift, and go to state 5
    MINUS      shift, and go to state 6

    TERM  go to state 56


State 50

    3 stmtList: stmt NEWLINE stmtList .

    $default  reduce using rule 3 (stmtList)


State 51

    6 stmt: TERM EQUAL TERM . PLUS TERM
    7     | TERM EQUAL TERM . MINUS TERM
    8     | TERM EQUAL TERM . MULTI TERM
    9     | TERM EQUAL TERM . DIV TERM
   10     | TERM EQUAL TERM .

    MINUS  shift, and go to state 57
    MULTI  shift, and go to state 58
    PLUS   shift, and go to state 59
    DIV    shift, and go to state 60

    $default  reduce using rule 10 (stmt)


State 52

   27 TERM: STR DOT STR DOT .

    $default  reduce using rule 27 (TERM)


State 53

   11 stmt: IF TERM OPR TERM . GOTO LABEL

    GOTO  shift, and go to state 61


State 54

   22 stmt: CALL TERM COMMA TERM .

    $default  reduce using rule 22 (stmt)


State 55

   18 stmt: CNVRTFLOAT TERM COMMA TERM .

    $default  reduce using rule 18 (stmt)


State 56

   19 stmt: CNVRTINT TERM COMMA TERM .

    $default  reduce using rule 19 (stmt)


State 57

    7 stmt: TERM EQUAL TERM MINUS . TERM

    STR        shift, and go to state 3
    INT_LIT    shift, and go to state 4
    FLOAT_LIT  shift, and go to state 5
    MINUS      shift, and go to state 6

    TERM  go to state 62


State 58

    8 stmt: TERM EQUAL TERM MULTI . TERM

    STR        shift, and go to state 3
    INT_LIT    shift, and go to state 4
    FLOAT_LIT  shift, and go to state 5
    MINUS      shift, and go to state 6

    TERM  go to state 63


State 59

    6 stmt: TERM EQUAL TERM PLUS . TERM

    STR        shift, and go to state 3
    INT_LIT    shift, and go to state 4
    FLOAT_LIT  shift, and go to state 5
    MINUS      shift, and go to state 6

    TERM  go to state 64


State 60

    9 stmt: TERM EQUAL TERM DIV . TERM

    STR        shift, and go to state 3
    INT_LIT    shift, and go to state 4
    FLOAT_LIT  shift, and go to state 5
    MINUS      shift, and go to state 6

    TERM  go to state 65


State 61

   11 stmt: IF TERM OPR TERM GOTO . LABEL

    LABEL  shift, and go to state 66


State 62

    7 stmt: TERM EQUAL TERM MINUS TERM .

    $default  reduce using rule 7 (stmt)


State 63

    8 stmt: TERM EQUAL TERM MULTI TERM .

    $default  reduce using rule 8 (stmt)


State 64

    6 stmt: TERM EQUAL TERM PLUS TERM .

    $default  reduce using rule 6 (stmt)


State 65

    9 stmt: TERM EQUAL TERM DIV TERM .

    $default  reduce using rule 9 (stmt)


State 66

   11 stmt: IF TERM OPR TERM GOTO LABEL .

    $default  reduce using rule 11 (stmt)
